<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dotop.smartwater.project.third.meterread.client.dao.third.IThirdDao">

    <resultMap id="BaseResultMap"
               type="com.dotop.smartwater.project.third.meterread.client.core.third.vo.RemoteCustomerVo">
        <result column="FactoryId" jdbcType="INTEGER" property="factoryId"/>
        <result column="MeterAddr" jdbcType="VARCHAR" property="meterAddr"/>
        <result column="MeterId" jdbcType="INTEGER" property="meterId"/>
        <result column="UserName" jdbcType="VARCHAR" property="userName"/>
        <result column="Linkman" jdbcType="VARCHAR" property="linkman"/>
        <result column="Phone" jdbcType="VARCHAR" property="phone"/>
        <result column="PaperNo" jdbcType="VARCHAR" property="paperNo"/>
        <result column="Address" jdbcType="VARCHAR" property="address"/>
        <result column="Caliber" jdbcType="VARCHAR" property="caliber"/>
        <result column="InstallDate" jdbcType="TIMESTAMP" property="installDate"/>
        <result column="IfCtrlValve" jdbcType="INTEGER" property="ifCtrlValve"/>
        <result column="Remark" jdbcType="VARCHAR" property="remark"/>
        <result column="Imported" jdbcType="INTEGER" property="imported"/>
        <result column="OldMeterID" jdbcType="INTEGER" property="oldMeterID"/>
        <result column="UserCode" jdbcType="VARCHAR" property="userCode"/>
        <result column="OldMeterAddr" jdbcType="VARCHAR" property="oldMeterAddr"/>
        <result column="ExtendData1" jdbcType="VARCHAR" property="extendData1"/>
        <result column="ExtendData2" jdbcType="VARCHAR" property="extendData2"/>
        <result column="ExtendData3" jdbcType="VARCHAR" property="extendData3"/>

    </resultMap>

    <resultMap id="RemoteValueResultMap"
               type="com.dotop.smartwater.project.third.meterread.client.core.third.vo.RemoteValveVo">
        <result column="FactoryId" jdbcType="INTEGER" property="factoryId"/>
        <result column="MeterAddr" jdbcType="VARCHAR" property="meterAddr"/>
        <result column="ValveFlag" jdbcType="INTEGER" property="valveFlag"/>
        <result column="InsertDate" jdbcType="TIMESTAMP" property="insertDate"/>
        <result column="IfProcess" jdbcType="INTEGER" property="ifProcess"/>
        <result column="ProcessDate" jdbcType="VARCHAR" property="processDate"/>
        <result column="ProcessDesc" jdbcType="VARCHAR" property="processDesc"/>
        <result column="ProcessResult" jdbcType="VARCHAR" property="processResult"/>
        <result column="ID" jdbcType="VARCHAR" property="id"/>
    </resultMap>

    <select id="getList"
            resultType="com.dotop.smartwater.project.third.meterread.client.core.third.vo.RemoteDataVo">
        SELECT MeterAddr as meterAddr, ReadNumber as readNumber, LastUpdateTime as lastUpdateTime, ReadDate as readDate,
        ID as id FROM tRemote_Data
        <where>
            FactoryId=#{factoryId}
            and MeterAddr in
            <foreach collection="meterAddrs" item="meterAddr" close=")" open="(" separator=",">#{meterAddr}</foreach>
        </where>
    </select>

    <update id="updates">
        <foreach collection="remoteDataBos" item="remoteDataBo">
            update tRemote_Data
            set FactoryId =#{remoteDataBo.factoryId}, MeterAddr= #{remoteDataBo.meterAddr},ReadNumber=
            #{remoteDataBo.readNumber},ReadDate = #{remoteDataBo.readDate},LastUpdateTime =
            #{remoteDataBo.lastUpdateTime}
            where FactoryId = #{remoteDataBo.factoryId} and MeterAddr = #{remoteDataBo.meterAddr};
        </foreach>
    </update>

    <insert id="inserts">
        insert into tRemote_Data(FactoryId, MeterAddr, ReadNumber, ReadDate, LastUpdateTime)
        values
        <foreach collection="remoteDataBos" item="remoteDataBo" separator=",">
            (#{remoteDataBo.factoryId},#{remoteDataBo.meterAddr},#{remoteDataBo.readNumber},
            #{remoteDataBo.readDate},#{remoteDataBo.lastUpdateTime})
        </foreach>
    </insert>


    <select id="findOwnerByIdList"
            resultMap="BaseResultMap">
        SELECT * FROM tRemote_customer where ExtendData1 in
        <foreach collection="ownerIdList" open="(" item="ele" separator="," close=")">
            #{ele}
        </foreach>
        and FactoryId=#{factoryId}
    </select>

    <insert id="insertBatch">
            insert into tRemote_customer (FactoryId, MeterAddr, UserName, IfCtrlValve, Imported, ExtendData1, ExtendData2, ExtendData3, Linkman, Phone, PaperNo, Address, Caliber, UserCode) values
           <foreach collection="list" item="item" index="index" separator=",">
               (#{item.factoryId},
               #{item.meterAddr},
               #{item.userName},
               #{item.ifCtrlValve},
               #{item.imported},
               #{item.extendData1},
               #{item.extendData2},
               #{item.extendData3},
               #{item.linkman},
               #{item.phone},
               #{item.paperNo},
               #{item.address},
               #{item.caliber},
               #{item.userCode})
          </foreach>
     </insert>


    <update id="batchUpdate">
        <foreach collection="customerDtoList" item="item" open="" close="" separator=";">
            update tRemote_customer
            set
                OldMeterID=#{item.oldMeterID},
                OldMeterAddr=#{item.oldMeterAddr},
                MeterAddr=#{item.meterAddr},
                ExtendData2=#{item.extendData2},
                ExtendData3=#{item.extendData3},
                UserName=#{item.userName},
                Linkman=#{item.linkman},
                IfCtrlValve=#{item.ifCtrlValve},
                Phone=#{item.phone},
                PaperNo=#{item.paperNo},
                Caliber=#{item.caliber},
                UserCode=#{item.userCode}
            where ExtendData1 = #{item.extendData1} and FactoryId=#{factoryId};
        </foreach>
    </update>

    <select id="getRemoteValveList" resultMap="RemoteValueResultMap">
        select * from tRemote_Valve
        <where>
            FactoryId = #{factoryId}
            <if test="ifProcess != null">
                and IfProcess = #{ifProcess}
            </if>
        </where>
    </select>


    <update id="editRemoteValve">
            update tRemote_Valve
            <set>
                <if test="ifProcess != null">
                    IfProcess=#{ifProcess},
                </if>
                <if test="extendData1 != null">
                    ExtendData1=#{extendData1},
                </if>
                <if test="processDesc != null">
                    ProcessDesc=#{processDesc},
                </if>
                <if test="extendData2 != null">
                    ExtendData2=#{extendData2},
                </if>
                <if test="processResult != null">
                    ProcessResult=#{processResult},
                </if>
                ProcessDate=#{processDate}
            </set>
            where FactoryId = #{factoryId} and MeterAddr = #{meterAddr}
    </update>

    <select id="findOwnerByFactorId" resultMap="BaseResultMap">
        SELECT * FROM tRemote_customer WHERE FactoryId = #{factoryId}
    </select>

    <delete id="batchDelete">
        delete from tRemote_customer where extendData1 in
        <foreach collection="delExtendData1List" open="(" item="ele" separator="," close=")">
            #{ele}
        </foreach>
        and FactoryId=#{factoryId}
    </delete>

</mapper>