<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dotop.smartwater.project.module.dao.pay.IPaymentOrderDao">
    <resultMap id="BaseResultMap" type="com.dotop.smartwater.project.module.core.pay.vo.PaymentOrderVo">
        <id column="payid" jdbcType="VARCHAR" property="payid"/>
        <result column="trade_number" jdbcType="VARCHAR" property="tradeNumber"/>
        <result column="trade_name" jdbcType="VARCHAR" property="tradeName"/>
        <result column="amount" jdbcType="VARCHAR" property="amount"/>
        <result column="mode" jdbcType="VARCHAR" property="mode"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="enterpriseid" jdbcType="VARCHAR" property="enterpriseid"/>
        <result column="extra" jdbcType="VARCHAR" property="extra"/>
        <result column="callback_url" jdbcType="VARCHAR" property="callbackUrl"/>
    </resultMap>

    <select id="get" resultMap="BaseResultMap">
    select payid, trade_number, trade_name, amount, mode, status, pay_time, create_date, enterpriseid,
         extra, callback_url
      from payment_order
    where payid = #{payid,jdbcType=VARCHAR}
  </select>
    <delete id="del" parameterType="java.lang.String">
    delete from payment_order
    where payid = #{payid,jdbcType=VARCHAR}
  </delete>
    <insert id="add" parameterType="com.dotop.smartwater.project.module.core.pay.dto.PaymentOrderDto">
    insert into payment_order (payid, trade_number, trade_name, 
      amount, mode, status,
      pay_time, create_date, enterpriseid,
      extra, callback_url)
    values (#{payid,jdbcType=VARCHAR}, #{tradeNumber,jdbcType=VARCHAR}, #{tradeName,jdbcType=VARCHAR}, 
      #{amount,jdbcType=VARCHAR}, #{mode,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{payTime,jdbcType=TIMESTAMP}, #{createDate,jdbcType=TIMESTAMP}, #{enterpriseid,jdbcType=VARCHAR},
      #{extra,jdbcType=VARCHAR}, #{callbackUrl,jdbcType=VARCHAR})
  </insert>
    <update id="edit" parameterType="com.dotop.smartwater.project.module.core.pay.dto.PaymentOrderDto">
        update payment_order
        <set>
            <if test="tradeNumber != null and tradeNumber != '' ">
                trade_number = #{tradeNumber,jdbcType=VARCHAR},
            </if>
            <if test="tradeName != null and tradeName != '' ">
                trade_name = #{tradeName,jdbcType=VARCHAR},
            </if>
            <if test="amount != null and amount != '' ">
                amount = #{amount,jdbcType=VARCHAR},
            </if>
            <if test="mode != null and mode != '' ">
                mode = #{mode,jdbcType=VARCHAR},
            </if>
            <if test="status != null and status != '' ">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null ">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDate != null ">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="enterpriseid != null and enterpriseid != '' ">
                enterpriseid = #{enterpriseid,jdbcType=VARCHAR},
            </if>
            <if test="extra != null and extra != '' ">
                extra = #{extra,jdbcType=VARCHAR},
            </if>
            <if test="callbackUrl != null and callbackUrl != '' ">
                callback_url = #{callbackUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where payid = #{payid,jdbcType=VARCHAR}
    </update>

    <select id="list" resultMap="BaseResultMap">
    select payid, trade_number, trade_name, amount, mode, status, pay_time, create_date, enterpriseid,
         extra, callback_url
      from payment_order
  </select>

    <select id="findByTradeNumberAndEid" resultMap="BaseResultMap">
    select payid, trade_number, trade_name, amount, mode, status, pay_time, create_date, enterpriseid,
         extra, callback_url
      from payment_order where trade_number = #{tradeNumber} and enterpriseid = #{enterpriseid}
  </select>

    <select id="getPayInList" resultMap="BaseResultMap">
        select payid, trade_number, trade_name, amount, mode, status, pay_time, create_date, enterpriseid,
         extra, callback_url
      from payment_order where status = #{status}
      and round((UNIX_TIMESTAMP(NOW())-UNIX_TIMESTAMP(create_date))/60) &gt;= #{minutes}
  </select>
</mapper>