<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.dotop.pipe.api.dao.point.IPointMapDao">

	<insert id="add">
		INSERT INTO pls_point_map
		(map_id, point_id,
		device_id,
		create_by, create_date, last_by, last_date, is_del,
		enterprise_id)
		VALUES
		(#{mapId}, #{pointId}, #{deviceId},
		#{userBy},
		#{curr},
		#{userBy},
		#{curr}, #{isDel}, #{enterpriseId});
	</insert>

	<update id="del">
		UPDATE pls_point_map SET
		is_del=#{newIsDel},last_by=#{userBy},
		last_date=#{curr}
		WHERE
		enterprise_id=#{enterpriseId}
		<if test="pointId != null and pointId != ''">
			AND point_id=#{pointId}
		</if>
		<if test="deviceId != null and deviceId != ''">
			AND device_id=#{deviceId}
		</if>
		<if test="pointIds != null">
				AND point_id IN
				<foreach collection="pointIds" index="index" item="pointId1" open="(" separator="," close=")">
					#{pointId1}
				</foreach>
		</if>
		<if test="deviceIds != null">
				AND device_id IN
				<foreach collection="deviceIds" index="index" item="deviceId1" open="(" separator="," close=")">
					#{deviceId1}
				</foreach>
		</if>
		AND is_del=#{isDel}
	</update>
	
	<select id="isExist" resultType="java.lang.Boolean">
		SELECT EXISTS
		(
		SELECT map_id FROM pls_point_map
		<where>
			enterprise_id=#{enterpriseId} AND
			is_del=#{isDel}
			<if test="pointId != null and pointId != ''">
				AND point_id=#{pointId}
			</if>
		</where>
		)
	</select>

	<select id="isExistByDeviceId" resultType="java.lang.Boolean">
		SELECT EXISTS
		(
		SELECT map_id FROM pls_point_map
		<where>
			enterprise_id=#{enterpriseId} AND
			is_del=#{isDel}
			<if test="pointId != null and pointId != ''">
				AND point_id=#{pointId}
			</if>
			<if test="deviceId != null and deviceId != ''">
				AND device_id=#{deviceId}
			</if>
		</where>
		)
	</select>
	
	<insert id="addList">
	INSERT INTO pls_point_map
		(map_id, point_id,
		device_id,
		create_by, create_date, last_by, last_date, is_del,
		enterprise_id)
		VALUES
		<foreach collection="points" item="item" index="index" separator=",">
            (#{item.pointId}, #{item.pointId}, #{customizeId},
             #{userBy}, #{curr}, #{userBy}, #{curr}, #{isDel}, #{operEid})
        </foreach>
	</insert>
	
	<update id="delTables">
	<!--    DELETE  b.* from  pls_point as b  join pls_point_map as a on a.point_id = b.point_id
      where a.device_id = #{deviceId} 
      and a.enterprise_id = #{operEid} and b.enterprise_id = #{operEid}   -->
      
 <!--      UPDATE pls_point_map a , pls_point b 
      SET a.is_del =  #{isDel},
      last_by = #{userBy},
      last_date = #{curr},
      b.is_del =  #{isDel} 
      WHERE a.point_id = b.point_id and
       a.device_id = #{deviceId}  
       and a.enterprise_id = #{operEid}
       and b.enterprise_id = #{operEid} -->
      <!--  DELETE  from pls_point where point_id in 
       (select b.point_id FROM pls_point_map as b where b.device_id = #{deviceId} and b.enterprise_id = #{operEid}  );-->
       DELETE  from pls_point_map   where  device_id = #{deviceId} and  enterprise_id = #{operEid} 
	</update>

	<select id="list" resultType="com.dotop.pipe.core.vo.point.PointMapVo">
		select map_id as mapId, point_id as pointId, device_id as deviceId, create_by as createBy,
		create_date as createDate, last_by as lastBy, last_date as lastDate, is_del as isDel, enterprise_id as enterpriseId
		from pls_point_map
		<where>
			is_del = #{isDel}
			<if test="enterpriseId != null and enterpriseId != ''">
				and enterprise_id = #{enterpriseId}
			</if>
		</where>
	</select>

</mapper>